# .clangd

# 编译标志
CompileFlags:
  Add: [-std=c++26] # 确保你的 clangd 和 clang 版本支持 C++26/C++2b

# 诊断设置
Diagnostics:
  ClangTidy:
    # 'Checks' 是一个有效的键，'Override' (或 'Add') 在其之下
    Add:
      - abseil-*
      - altera-*
      - android-*
      - boost-*
      - bugprone-*
      - cert-*
      - concurrency-*
      - cppcoreguidelines-*
      - darwin-*
      - fuchsia-*
      - google-* # 包括 google-build, google-objc, google-readability, google-runtime, google-upgrade
      - hicpp-*
      - linuxkernel-*
      - llvm-*
      - llvmlibc-* # 注意：如果您在 Remove 中有排除，这里添加可能导致冲突或需要调整逻辑
      - misc-*
      - modernize-*
      - mpi-*
      - objc-*
      - openmp-*
      - performance-*
      - portability-*
      - readability-*
      - zircon-*
      - clang-analyzer-*
    # 排除某些检查
    Remove:
      - llvmlibc-callee-namespace
      - llvmlibc-implementation-in-namespace
      # - llvmlibc-inline-function-decl
      - llvmlibc-restrict-system-libc-headers
      - fuchsia-trailing-return
      # - fuchsia-default-arguments-calls
    # 允许运行慢速检查
    Arguments:
      - --warnings-as-errors=*
      # 使用积极过滤（只包含你自己的代码路径）通常更可靠
      - --header-filter=^(src|include)/.*
      # 或者更严格地排除已知的系统和第三方库路径 (请根据实际情况调整路径)
      # - --header-filter=^(?!/(usr|opt)/|.*/(third_party|external|vendor|build)/).*
    # 键是 "check-name.OptionName"，值是选项的值。
    CheckOptions:
      readability-identifier-naming.ClassCase: CamelCase
      readability-identifier-naming.StructCase: CamelCase # 或 camelBack, snake_case，视团队规范而定
      readability-identifier-naming.VariableCase: camelBack
      readability-identifier-naming.FunctionCase: camelBack
      readability-identifier-naming.MemberCase: camelBack
      readability-identifier-naming.EnumCase: CamelCase
      readability-identifier-naming.EnumConstantCase: UPPER_CASE_WITH_UNDERSCORES
      readability-identifier-naming.GlobalConstantCase: UPPER_CASE_WITH_UNDERSCORES
      readability-identifier-naming.ParameterCase: camelBack
      readability-identifier-naming.NamespaceCase: lower_case_with_underscores # 或 lower_case
      cppcoreguidelines-owning-memory.SmartPointerPatterns: 'std::unique_ptr;std::shared_ptr;std::weak_ptr'
      modernize-loop-convert.MaxCopySize: 16 # 注意这里是数字，不需要引号
      modernize-use-auto.MinTypeNameLength: 5 # 数字
      performance-move-const-arg.WarnOnSmallCopies: 0 # 数字
      misc-unused-parameters.WarnAllParameters: true # 布尔值
      readability-magic-numbers.IgnoreAllFloatingPointValues: false # 布尔值
      readability-magic-numbers.IgnoreBitFieldsWidths: false # 布尔值
      # readability-function-size.LineThreshold: 80 # 例如
      # readability-function-cognitive-complexity.Threshold: 10 # 例如

# 内嵌提示 (Inlay Hints)
InlayHints:
  Enabled: true
  ParameterNames: true
  DeducedTypes: true  # Designators: true # C++20 (Clangd 12+)
  # BlockEnd: true    # (Clangd 13+) 